/*

ДЗ 1

Ми знаємо як відсортувати масив. А ось спробуйте його перемішати!

Приклад масиву: arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]; 

Напишіть функцію myBlend(arr), яка перемішуватиме переданий їй масив. 
Зверніть увагу: не створювати новий масив, вже перемішаний, а саме перемішувати той, який їй передали.

*/

let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];
console.log(`Оригинальный массив: ${arr}`);

//Объявляем функцию myBlend с параметром arr
function myBlend(arr) {
  //Используем метод sort для сортировки элементов массива с использованием функции сравнения
  arr.sort(function () {
    /*Внутри функции сравнения генерируется случайное число от 0 (включительно) до 1 (не включительно) и вычитается 0.5. 
    Это приводит к тому, что результат будет в интервале от - 0.5 до 0.5*/
    return Math.random() - 0.5;
  });
  //Возврат измененного массива после сортировки
  return arr;
}

let blendedArr = myBlend(arr);
console.log(`Перетасованный массив: ${blendedArr}`);

/*

ДЗ 2

Уявімо собі, що ми є власниками великої компанії, яка розробляє платформу для продажу квитків. Окрім того, наша компанія продає рішення для організації продажу цих квитків. 
Таким чином, у нас будуть клієнти, які придбають наше програмне забезпечення (ПО). По суті, ці клієнти будуть подібні до "дочірніх компаній" (subCompany), 
які вже використовують наше ПО для продажу квитків. Крім цього, ці "дочірні компанії" також можуть стати постачальниками цього рішення, і в цьому випадку 
вони вже будуть "внучатами компанії" (subSubCompany), і так далі і далі

Ось приклад об'єкту, зверніть увагу на вкладеність, та маєте на увазі що об'єкт може ставати ще глибшим.

const company = {
    name: 'Велика Компанія',
    type:'Головна компанія',
    platform: 'Платформа для продажу квитків',
    sellsSolution: 'Рішення для продажу квитків',
    clients: [
        {
            name: 'Клієнт 1',
            type: 'subCompany',
            uses: 'ПО для продажу квитків',
            sells: 'Рішення для продажу квитків',
            partners: [
                {
                    name: 'Клієнт 1.1',
                    type: 'subSubCompany',
                    uses: 'Рішення для продажу квитків',
                    sells: 'Рішення для продажу квитків',
                },
                {
                    name: 'Клієнт 1.2',
                    type: 'subSubCompany',
                    uses: 'Рішення для продажу квитків',
                    sells: 'Рішення для продажу квитків',
                    partners: [
                        {
                            name: 'Клієнт 1.2.3',
                            type: 'subSubCompany',
                            uses: 'Рішення для продажу квитків',
                            sells: 'Рішення для продажу квитків',
                        }
                    ]
                }
            ]
        },
        {
            name: 'Клієнт 2',
            type: 'subCompany',
            uses: 'ПО для продажу квитків',
            sells: 'Рішення для продажу квитків'
        }
    ]
};

Вам необхідно написати функцію findValueByKey(companyName), яка буде приймати значення у вигляді companyName та надавати інформацію про цю subCompany.

*/

const company = {
    name: 'Велика Компанія',
    type:'Головна компанія',
    platform: 'Платформа для продажу квитків',
    sellsSolution: 'Рішення для продажу квитків',
    clients: [
        {
            name: 'Клієнт 1',
            type: 'subCompany',
            uses: 'ПО для продажу квитків',
            sells: 'Рішення для продажу квитків',
            partners: [
                {
                    name: 'Клієнт 1.1',
                    type: 'subSubCompany',
                    uses: 'Рішення для продажу квитків',
                    sells: 'Рішення для продажу квитків',
                },
                {
                    name: 'Клієнт 1.2',
                    type: 'subSubCompany',
                    uses: 'Рішення для продажу квитків',
                    sells: 'Рішення для продажу квитків',
                    partners: [
                        {
                            name: 'Клієнт 1.2.3',
                            type: 'subSubCompany',
                            uses: 'Рішення для продажу квитків',
                            sells: 'Рішення для продажу квитків',
                        }
                    ]
                }
            ]
        },
        {
            name: 'Клієнт 2',
            type: 'subCompany',
            uses: 'ПО для продажу квитків',
            sells: 'Рішення для продажу квитків'
        }
    ]
};

function findValueByKey(companyName) {
  function searchInCompany(companyObj) {
    
    if (companyObj.name === companyName) {
      //Нашли компанию с указанным именем
      return companyObj;
    }

    else if (companyObj.clients && companyObj.clients.length > 0) {
      //Если есть клиенты и их значение больше 0, то рекурсивно вызываем функцию для каждого клиента
      for (const client of companyObj.clients) {
        //Рекурсивный вызов функции для каждого клиента
        const result = searchInCompany(client);
        //Если результат не равен null (было найдено совпадение), возвращаем результат и завершаем цикл
        if (result) {
          return result;
        }
      }
    }

    else if (companyObj.partners && companyObj.partners.length > 0) {
      //Если есть партнеры и их значение больше 0, рекурсивно вызываем функцию для каждого партнера
      for (const partners of companyObj.partners) {
        //Рекурсивный вызов функции для каждого партнера
        const result = searchInCompany(partners);
        //Если результат не равен null (было найдено совпадение), возвращаем результат и завершаем цикл
        if (result) {
          return result;
        }
      }
    }

    //Если ничего не найдено, возвращаем null
    return null;
  }

  //Начинаем поиск с основного объекта company
  return searchInCompany(company);
}

companyNameToFind = 'Клієнт 1.2.3';
const result = findValueByKey(companyNameToFind);

if (result) {
  console.log(`Найдена компания: \n`, result);
} else {
  console.log(`Не найдено компании с именем ${companyNameToFind}`);
}
