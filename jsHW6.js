/*

ДЗ №1

Створіть об'єкт з щонайменше трьома властивостями (намагайтесь виявити фантазію). 
Напишіть метод getInfo(), який виводитиме всі властивості об'єкта у вигляді пар "ключ: значення". 
Зверніть увагу: метод повинен працювати навіть після додавання нових властивостей до об'єкта. 

Наприклад так:

    obj.getInfo(); // Правильна інформація про об'єкт
    obj.newProperty = 'Нова властивість!'; // Додали властивість до об'єкта
    obj.getInfo(); // Виводить всі властивості, включаючи щойно додану.

Умови виконання ДЗ

    Не використовувати функції або інші матеріали які ми не вивчали
    Не використовувати методи keys, values, entries
    Намагайтесь робити ДЗ самостійно та не дивитися будь-які підказки

*/

const clientData = {
  firstName: "Serhii",
  age: 29,
  isResident: true,

  getInfo: function () {
    //Инициализируем переменную info пустой строкой
    let info = '';
    //Перебираем все свойства объекта (this - означает текущий объект clientData)
    for (let key in this) {
      //Проверка на то, что значение ключа НЕ является функцией
      if (typeof this[key] !== 'function') {
        //Формируем строку информации, добавляя ключ и значение к переменной info
        info = info + `${key}: ${this[key]}\n`;
      }
    }
    console.log(info);
  }
}

clientData.getInfo(); // Получим информацию по ключам и значениям ["firstName: Serhii", "age: 29", "isResident: true"]
clientData.secondName = 'Kotsar';
clientData.getInfo(); // Получим информацию по ключам и значениям ["firstName: Serhii", "age: 29", "isResident: true", "secondName: Kotsar"]


/*

ДЗ №2 Сума вартості послуг

 Припустимо, у нас є об'єкт. Властивості об'єкта - назва послуги та її вартість:

let services = {
	"стрижка": "60 грн",
	"гоління": "80 грн",
	"Миття голови": "100 грн"
};

"Послуги" можуть додаватися по ходу роботи:
services['Розбити скло'] = "200 грн";

Умови виконання ДЗ

    створити метод price(), який обчислює та повертає загальну вартість "наданих послуг".
    створити метод minPrice() - який повертає мінімальний price
    створити метод maxPrice() - який повертає максимальний price

*/

let services = {
  "стрижка": "60 грн",
  "гоління": "80 грн",
  "Миття голови": "100 грн",
  //метод price() - находит и выводит сумму всех числовых значений, представленных в свойствах объека, исключая методы
  price: function() {
    let total = 0;
    for (let key in this) {
      //Проверка на то, что значение ключа НЕ является функцией          
      if (typeof this[key] !== 'function') {
        //Берём наши значения (строки), разделяем их с помощью split с разделителем пробел и берём нулевой элемент (число) и приводим к number через +
        let value = +this[key].split(' ')[0];
          //Проверка, что полученное значение - это число (!isNaN(value)) и если это условые выполняется, то мы суммируем эти числа сохраняя значения в total
          if (!isNaN(value)) {
            total = total + value;
        }
      }
    }
    console.log(`Общая стоимость услуг: ${total} грн.`);
  },
  //метод minPrice () - находит и выводит минимальное числовое значение из чисел, представленных в свойствах объекта, исключая методы.
  minPrice: function () {
    //Переменная minNumber инициализируется значением Infinity (бесконечность), чтобы быть уверенным, что первое найденное число точно будет меньше.
    let minNumber = Infinity;
    for (let key in this) {
      //Проверка на то, что значение ключа НЕ является функцией
      if (typeof this[key] !== 'function') {
        //Берём наши значения (строки), разделяем их с помощью split с разделителем пробел и берём нулевой элемент (число) и приводим к number через +
        let numberValue = +this[key].split(' ')[0];
        //Проверка, что полученное значение - это число (!isNaN(numberValue)) и оно меньше текущего минимального значения. Если это условие выполняется, текущее минимальное значение обновляется.
        if (!isNaN(numberValue) && numberValue < minNumber) {
          minNumber = numberValue;
        }
      }
    }
    console.log(`Минимальная стоимость услуг: ${minNumber} грн.`);
  },
  //метод maxPrice () - находит и выводит максимальное числовое значение из чисел, представленных в свойствах объекта, исключая методы.
  maxPrice: function () {
  //Переменная maxNumber инициализируется значением -Infinity (минус бесконечность), чтобы быть уверенным, что первое найденное число точно будет больше.
  let maxNumber = -Infinity;
  for (let key in this) {
    //Проверка на то, что значение ключа НЕ является функцией
    if (typeof this[key] !== 'function') {
      //Берём наши значения (строки), разделяем их с помощью split с разделителем пробел и берём нулевой элемент (число) и приводим к number через +
      let numberValue = +this[key].split(' ')[0];
      //Проверка, что полученное значение - это число (!isNaN(numberValue)) и оно меньше больше текущего максимального значения. Если это условие выполняется, текущее максимальное значение обновляется.
      if (!isNaN(numberValue) && numberValue > maxNumber) {
        maxNumber = numberValue;
      }
    }
  }
  console.log(`Максимальная стоимость услуг: ${maxNumber} грн.`);
  }
};

services.price(); // выведет 240 грн
services.minPrice(); // выведет 60 грн
services.maxPrice(); // выведет 100 грн
services["сеанс гипноза"] = "500 грн" //добавляем новую услугу стоимостью 500 грн
services.price(); // выведет 740 грн
services.maxPrice(); // выведет 500 грн
services["сеанс терапии"] = "20 грн" //добавляем новую услугу стоимостью 20 грн
services.price(); // выведет 760 
services.minPrice(); // выведет 20 грн
